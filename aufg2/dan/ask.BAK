:- consult('aufg2').
:- consult('readsentence').


ask((Goal),[],[X|[Y|[Z|[]]]]) :- lex(_,X,na,_,_,_), Goal =.. [Y,X,Z].
ask((Goal),[Variable],[Y|[Z|[]]]) :- lex(_,X,bz,_,_,_), Goal =.. [Y,Variable,Z].
ask((OldGoals,Goal),[Variable],[X|[Y|[Z|R]]]) :- lex(_,X,na,_,_,_), ask(OldGoals,[Variable],[Y|[Z|R]]), Goal =.. [Y,X,Variable],!.
ask((OldGoals,Goal),[Variable|[OldVariable|RestVariable]],[X|[Y|[Z|R]]]) :- lex(_,X,bz,_,_,_), ask(OldGoals,[OldVariable|RestVariable],[Y|[Z|R]]), Goal =.. [Y,Variable,OldVariable].
ask([XXX|XX]) :- flatten([XXX|XX],[X|[Y|R]]), X==who, Y==be, ask(Goals,[Variable|VR],R), call(Goals), s([Variable|XX],C,[]),writer(C),!.
ask(Question) :- flatten(Question,[X|R]), X==be, ask(Goals,[Variable|VR],R),call(Goals),!.

writer([]) :- write('!').
writer([H|T]) :- write(' '), write(H), writer(T).

answering(F,W,[LL|L]) :- s([XX|X],F,[]), ask([XX|X]).

main(_) :- read_sentence(QuestionW),reverse(QuestionW,[_|QuestionR]), reverse(QuestionR,Question), answering(Question,_,_),!.
